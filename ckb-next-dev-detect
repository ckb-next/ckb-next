#!/usr/bin/env bash

# Newline
N=$'\n'

if [[ "$1" != "--nouserinput" ]]; then
    OUTPATH="${PWD}/"
    echo "This script will collect information about the Corsair devices in your system."
    read -p "Please make sure they are plugged in and press Enter.${N}"
else
    OUTPATH="/tmp/"
fi

# Force English
export LC_ALL=C

#Check if user can write to the PWD
touch "${OUTPATH}ckb-next-dev-detect-report.gz"
TOUCHRET=$?
if [ $TOUCHRET -ne 0 ]; then
    echo "Could not write the report to disk, make sure this user can write to ${OUTPATH}"
    echo "Retval: $TOUCHRET"
    exit $TOUCHRET
fi

OUT="ckb-next-dev-detect - $(date)"
OUT="${OUT}${N}${N}\`\`\`"

# Applies to both
OUT="${OUT}${N}Kernel: `uname -a`"

if [[ "$OSTYPE" == "darwin"* ]]; then
    OUT="${OUT}${N}${N}OS Version:${N}`sw_vers`"
    OUT="${OUT}${N}${N}USB Devices:${N}`system_profiler SPUSBDataType -detailLevel mini | grep -i -B3 -A9 1b1c`"
    OUT="${OUT}${N}${N}IOReg:${N}`ioreg -lxrc IOUSBDevice | sed -n '/Corsair/,/^$/p'`"
    OUT="${OUT}${N}${N}Daemon log:${N}`tail -n 100 /var/log/ckb-next-daemon.log`"
    OUT="${OUT}${N}${N}GUI log:${N}`cat /tmp/ckb-next.log`"
else
    OUT="${OUT}${N}${N}OS Version:${N}`lsb_release -a 2>/dev/null`"
    OUT="${OUT}${N}${N}USB Devices:${N}`lsusb -vd '1b1c:' 2>&1`"

    # Check if kernel ring buffer is reachable through systemd journal, fall back to dmesg
    if [ -z "$(journalctl -k 2>/dev/null)" ]; then
        OUT="${OUT}${N}${N}Systemctl error, falling back to dmesg:${N}`dmesg | grep -i \"ckb-next\|corsair\|1b1c\"`"
    else
        # Pipe stderr to /dev/null, as grep would filter errors out anyway
        OUT="${OUT}${N}${N}Dmesg on current boot:${N}`journalctl -o short-precise -k -b 0 2>/dev/null | grep -i \"ckb-next\|corsair\|1b1c\"`"
        OUT="${OUT}${N}${N}Dmesg on last boot:${N}`journalctl -o short-precise -k -b -1 2>/dev/null | grep -i \"ckb-next\|corsair\|1b1c\"`"
        OUT="${OUT}${N}${N}Daemon on current boot:${N}`journalctl -o short-precise -b 0 --unit=ckb-next-daemon 2>&1`"
        OUT="${OUT}${N}${N}Daemon on last boot:${N}`journalctl -o short-precise -b -1 --unit=ckb-next-daemon 2>&1`"
    fi
    OUT="${OUT}${N}${N}Dev nodes:${N}`find /dev/input/ckb* -print -type f -exec cat {} \; 2>&1`"
    OUT="${OUT}${N}${N}Environment:${N}`printenv | grep "QT\|XDG.*DESKTOP\|DISPLAY" 2>&1`"
    OUT="${OUT}${N}${N}Kernel command line:${N}`cat /proc/cmdline`"
    GUIPATH="$(which ckb-next)"
    OUT="${OUT}${N}${N}GUI ldd:${N}`ldd ${GUIPATH}`"
fi

OUT="${OUT}${N}\`\`\`${N}"

# Gzip and write output
echo "$OUT" | gzip > "${OUTPATH}ckb-next-dev-detect-report.gz"

echo "Done! Please send the following report to the developers."
echo "Location: ${OUTPATH}ckb-next-dev-detect-report.gz"
